§testReprint translationUnit:
;

§testReprint translationUnit:

§testReprint translationUnit:
#version 330 core
;

§testReprint translationUnit:
#pragma STDGL debug(on)

§testReprint translationUnit:
#pragma optimize(off)

§testReprint translationUnit:
#pragma invariant(all)

§testReprint translationUnit:
#pragma foobar

§testReprint translationUnit:
#extension foobar: require

§testReprint translationUnit:
#extension foobar: enable

§testReprint translationUnit:
#extension foobar: warn

§testReprint translationUnit:
#extension foobar: disable

§testReprint expression:
1 + 2
§testReprint expression:
1 | 2
§testReprint expression:
((a + b) * c)
§testReprint expression:
true ? 1.0 : bar.length()
§testReprint expression:
a, b, c
§testReprint expression:
(a, b, c, d)
§testReprint expression:
++1, --1, 1++, 1--, +1, -1, ~1, !1
§testReprint expression:
a.b, b.foo, a.b.c.d
§testReprint expression:
a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s
§testReprint expression:
a ? b ? c : d : e
§testReprint expression:
a - b * c / d % e ^ d & c | b ^ c
§testReprint expression:
a.c[4 + b[c]]
§testReprint expression:
a == b != c < d <= e > f >= g
§testReprint expression:
a && b || c ^^ c
§testReprint expression:
a << b >> c
§testReprint expression:
a = b += b -= b *= b /= a
§testReprint expression:
a %= b &= b |= b ^= b <<= c <<= d
§testReprint expression:
1 + 2us + 3ul + 4u + 5s + 0.1 + 0.2f + 0.3hf + 0.4lf
===
1 + 2us + 3ul + 4u + 5s + 0.1 + 0.2 + 0.3hf + 0.4lf
§testReprint statement:
;

§testReprint statement:
1;

§testReprint statement:
a + b;

§testReprint statement:
a = c;

§testReprint statement:
{
	1;
	2;
	3;
}

§testReprint statement:
{
	{
		1;
		2;
		{
			1;
			2;
			{
				1;
				2;
				{
					1;
					2;
				}
			}
		}
	}
	2;
	3;
}

§testReprint statement:
{
	;
	;
	;
}

§testReprint statement:
if (a && b) {
	1;
}

§testReprint statement:
if (a) 1;

§testReprint statement:
if (a) 1;
else 2;

§testReprint statement:
if (a) 1;
else if (b) 2;

§testReprint statement:
if (a) 1;
else if (b) 2;
else 3;

§testReprint statement:
if (a) 1;
else if (b) 2;
else if (c) 3;
else 4;

§testReprint statement:
if (a) 1;
else if (b) 2;
else if (c) 3;

§testReprint statement:
if (a) 1;
else if (b) 2;
else if (c) 3;
else if (c) 3;
else if (c) 3;
else if (c) 3;
else if (c) 3;
else if (c) 3;
else if (c) 3;
else if (c) 3;
else 4;

§testReprint statement:
if (a) {
	1;
} else if (b) {
	2;
} else {
	3;
}

§testReprint statement:
if (a) {
	1;
} else {
	3;
}

§testReprint statement:
if (a) {
	1;
} else if (b) {
	3;
}

§testReprint statement:
while (true) 1;

§testReprint statement:
while (true) {
	1;
}

§testReprint statement:
while (a && b) {
	5;
	if (true) {
		4;
	}
	4;
}

§testReprint statement:
do {
	1;
} while (true);

§testReprint statement:
do 1;
while (true);

§testReprint statement:
for (i = 0; i < 10; i++) {
	1;
}

§testReprint statement:
for (i = 0; i < 10; i++) 1;

§testReprint statement:
for (i = 0; i < 10; ) 1;

§testReprint statement:
for (i = 0; ; i++) 1;

§testReprint statement:
for (i = 0; ; ) 1;

§testReprint statement:
for ( ; ; ) 1;

§testReprint statement:
for ( ; ; i++) 1;

§testReprint statement:
for ( ; i < 10; ) 1;

§testReprint statement:
break;

§testReprint statement:
continue;

§testReprint statement:
return;

§testReprint statement:
return 4 + 4;

§testReprint statement:
discard;

§testReprint statement:
demote;

§testReprint statement:
{
	return;
}

§testReprint statement:
{
	1;
	switch (a) {
		case 1:
			1;
			break;
	}
}

§testReprint statement:
switch (a) {
	case 1:
		1;
		break;
}

§testReprint statement:
switch (a) {
	case 1:
	case 2:
		break;
	default:
		1;
		break;
}

§testReprint statement:
switch (a) {
	case 1:
		switch (b) {
			case 1:
				1;
				break;
		}
	default:
}

§testReprint statement:
switch (a) {
}

§testReprint statement:
switch (a) {
	case 2:
}

